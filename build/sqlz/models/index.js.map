{"version":3,"sources":["../src/sqlz/models/index.ts"],"names":[],"mappings":";;AAAA,yBAAwB;AACxB,6BAA4B;AAC5B,uCAAsC;AAEtC,MAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAA;AAQ/C,IAAI,EAAE,GAAG,EAAE,CAAA;AAEX,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AAC7C,MAAM,SAAS,GAAG,IAAI,SAAS,CAC7B,QAAQ,CAAC,UAAU,CAAC,EACpB,QAAQ,CAAC,UAAU,CAAC,EACpB,QAAQ,CAAC,UAAU,CAAC,EACpB,QAAQ,CACT,CAAA;AAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AAC/C,EAAE;KACC,WAAW,CAAC,SAAS,CAAC;KACtB,MAAM,CAAC,UAAS,IAAI;IACnB,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAA;AACvF,CAAC,CAAC;KACD,OAAO,CAAC,UAAS,IAAI;IACpB,MAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAA;IAG7D,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAA;AAC3B,CAAC,CAAC,CAAA;AAEJ,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAS,SAAS;IACxC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5B,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;IAC7B,CAAC;AACH,CAAC,CAAC,CAAA;AAEF,EAAE,CAAC,WAAW,CAAC,GAAG,SAAS,CAAA;AAC3B,EAAE,CAAC,WAAW,CAAC,GAAG,SAAS,CAAA;AAE3B,kBAA6B,EAAE,CAAA","file":"index.js","sourcesContent":["import * as fs from 'fs'\nimport * as path from 'path'\nimport * as Sequelize from 'sequelize'\n\nconst config = require('../config/config.json')\n\n// Import model specification from its own definition file.\nimport { ProjectInstance, ProjectAttributes } from './project'\n\ninterface DbConnection {\n  Project: Sequelize.Model<ProjectInstance, ProjectAttributes>\n}\nlet db = {}\n\nconst dbConfig = config[process.env.NODE_ENV]\nconst sequelize = new Sequelize(\n  dbConfig['database'],\n  dbConfig['username'],\n  dbConfig['password'],\n  dbConfig\n)\n\nconst basename = path.basename(module.filename)\nfs\n  .readdirSync(__dirname)\n  .filter(function(file) {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js')\n  })\n  .forEach(function(file) {\n    const model = sequelize['import'](path.join(__dirname, file))\n    // NOTE: you have to change from the original property notation to\n    // index notation or tsc will complain about undefined property.\n    db[model['name']] = model\n  })\n\nObject.keys(db).forEach(function(modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db)\n  }\n})\n\ndb['sequelize'] = sequelize\ndb['Sequelize'] = Sequelize\n\nexport default <DbConnection>db\n"],"sourceRoot":"../../../src"}